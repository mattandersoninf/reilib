{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\Programming\\\\reilib\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// authContext\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  // when you first open the webpage, you shouldn't be logged in so the user is null\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  });\n\n  // once you've logged in, you want to maintain the user information in the Authcontext\n  // by using the useEffect function, this will check your local storage to see any set\n  // set values and if a user already exists in there because you'd already logged in,\n  // the Authcontext will grab that\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"ziSQ+dPq4uySCVX+4ICDwWIxTw4=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","AuthContextProvider","children","_s","dispatch","JSON","parse","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Documents/Programming/reilib/frontend/src/context/AuthContext.js"],"sourcesContent":["\r\n// authContext\r\n\r\nimport { createContext, useEffect, useReducer } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const authReducer = (state, action) => {\r\n\r\n    switch (action.type){\r\n        case 'LOGIN':\r\n            return { user: action.payload }\r\n        case 'LOGOUT':\r\n            return { user: null }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n\r\n    // when you first open the webpage, you shouldn't be logged in so the user is null\r\n    const [state, dispatch] = useReducer(authReducer, {\r\n        user:null\r\n    })\r\n\r\n    // once you've logged in, you want to maintain the user information in the Authcontext\r\n    // by using the useEffect function, this will check your local storage to see any set\r\n    // set values and if a user already exists in there because you'd already logged in,\r\n    // the Authcontext will grab that\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user) {\r\n            dispatch({type: 'LOGIN', payload: user})\r\n        }\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <AuthContext.Provider value={{...state, dispatch}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n"],"mappings":";;AACA;;AAEA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAE1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,OAAO;MACR,OAAO;QAAEC,IAAI,EAAEF,MAAM,CAACG;MAAQ,CAAC;IACnC,KAAK,QAAQ;MACT,OAAO;QAAED,IAAI,EAAE;MAAK,CAAC;IACzB;MACI,OAAOH,KAAK;EACpB;AAEJ,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEjD;EACA,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGb,UAAU,CAACI,WAAW,EAAE;IAC9CI,IAAI,EAAC;EACT,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACAT,SAAS,CAAC,MAAM;IACZ,MAAMS,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAErD,IAAIT,IAAI,EAAE;MACNK,QAAQ,CAAC;QAACN,IAAI,EAAE,OAAO;QAAEE,OAAO,EAAED;MAAI,CAAC,CAAC;IAC5C;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAC,GAAGd,KAAK;MAAEQ;IAAQ,CAAE;IAAAF,QAAA,EAC7CA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAG/B,CAAC;AAAAX,EAAA,CA1BYF,mBAAmB;AAAAc,EAAA,GAAnBd,mBAAmB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}