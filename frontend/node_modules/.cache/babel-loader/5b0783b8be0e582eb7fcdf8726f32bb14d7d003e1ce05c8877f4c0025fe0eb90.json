{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\Programming\\\\reilib\\\\frontend\\\\src\\\\components\\\\PropertyForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyForm = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [listPrice, setListPrice] = useState(\"\");\n  const [livingArea, setLivingArea] = useState(\"\");\n  const [totalBedrooms, setTotalBedrooms] = useState(\"\");\n  const [totalBathrooms, setTotalBathrooms] = useState(\"\");\n  const [error, setError] = useState(null);\n  const separateAddress = address => {\n    const components = {\n      streetNumber: \"\",\n      streetName: \"\",\n      city: \"\",\n      stateOrProvince: \"\",\n      postalCode: \"\"\n    };\n\n    // Split the address by commas\n    const addressParts = address.split(\",\");\n\n    // Extract the street number and street name\n    const streetInfo = addressParts[0].trim().split(\" \");\n    components.streetNumber = streetInfo.shift();\n    components.streetName = streetInfo.join(\" \");\n\n    // Extract the remaining address components\n    components.city = addressParts[1].trim();\n    components.stateOrProvince = addressParts[2].trim();\n    components.postalCode = addressParts[3].trim();\n    return components;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const separatedAddress = separateAddress(address);\n    const property = {\n      ...separatedAddress,\n      listPrice,\n      livingArea,\n      totalBedrooms,\n      totalBathrooms\n    };\n    try {\n      console.log(property);\n      const response = await fetch(\"/api/properties\", {\n        method: \"POST\",\n        body: JSON.stringify(property),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setError(json.error);\n      } else {\n        setAddress(\"\");\n        setListPrice(\"\");\n        setLivingArea(\"\");\n        setTotalBedrooms(\"\");\n        setTotalBathrooms(\"\");\n        setError(null);\n        console.log(\"New property has been added\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting property:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New Property\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setAddress(e.target.value),\n      value: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"List Price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setListPrice(e.target.value),\n      value: listPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Living Area (sq ft):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setLivingArea(e.target.value),\n      value: livingArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Total Bedrooms:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTotalBedrooms(e.target.value),\n      value: totalBedrooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Total Bathrooms:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTotalBathrooms(e.target.value),\n      value: totalBathrooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyForm, \"J6SEcm10OgJo2mIXR0x4N0T/5RY=\");\n_c = PropertyForm;\nexport default PropertyForm;\nvar _c;\n$RefreshReg$(_c, \"PropertyForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PropertyForm","_s","address","setAddress","listPrice","setListPrice","livingArea","setLivingArea","totalBedrooms","setTotalBedrooms","totalBathrooms","setTotalBathrooms","error","setError","separateAddress","components","streetNumber","streetName","city","stateOrProvince","postalCode","addressParts","split","streetInfo","trim","shift","join","handleSubmit","e","preventDefault","separatedAddress","property","console","log","response","fetch","method","body","JSON","stringify","headers","json","ok","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","classname","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Documents/Programming/reilib/frontend/src/components/PropertyForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst PropertyForm = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [listPrice, setListPrice] = useState(\"\");\r\n  const [livingArea, setLivingArea] = useState(\"\");\r\n  const [totalBedrooms, setTotalBedrooms] = useState(\"\");\r\n  const [totalBathrooms, setTotalBathrooms] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const separateAddress = (address) => {\r\n    const components = {\r\n      streetNumber: \"\",\r\n      streetName: \"\",\r\n      city: \"\",\r\n      stateOrProvince: \"\",\r\n      postalCode: \"\",\r\n    };\r\n\r\n    // Split the address by commas\r\n    const addressParts = address.split(\",\");\r\n\r\n    // Extract the street number and street name\r\n    const streetInfo = addressParts[0].trim().split(\" \");\r\n    components.streetNumber = streetInfo.shift();\r\n    components.streetName = streetInfo.join(\" \");\r\n\r\n    // Extract the remaining address components\r\n    components.city = addressParts[1].trim();\r\n    components.stateOrProvince = addressParts[2].trim();\r\n    components.postalCode = addressParts[3].trim();\r\n\r\n    return components;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const separatedAddress = separateAddress(address);\r\n\r\n    const property = {\r\n      ...separatedAddress,\r\n      listPrice,\r\n      livingArea,\r\n      totalBedrooms,\r\n      totalBathrooms,\r\n    };\r\n\r\n    try {\r\n    console.log(property)\r\n      const response = await fetch(\"/api/properties\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(property),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setError(json.error);\r\n      } else {\r\n        setAddress(\"\");\r\n        setListPrice(\"\");\r\n        setLivingArea(\"\");\r\n        setTotalBedrooms(\"\");\r\n        setTotalBathrooms(\"\");\r\n        setError(null);\r\n        console.log(\"New property has been added\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting property:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <h3>Add a New Property</h3>\r\n\r\n      <label>Address:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setAddress(e.target.value)}\r\n        value={address}\r\n      />\r\n\r\n      <label>List Price:</label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => setListPrice(e.target.value)}\r\n        value={listPrice}\r\n      />\r\n\r\n      <label>Living Area (sq ft):</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setLivingArea(e.target.value)}\r\n        value={livingArea}\r\n      />\r\n\r\n      <label>Total Bedrooms:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setTotalBedrooms(e.target.value)}\r\n        value={totalBedrooms}\r\n      />\r\n\r\n      <label>Total Bathrooms:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setTotalBathrooms(e.target.value)}\r\n        value={totalBathrooms}\r\n      />\r\n\r\n      <button type=\"submit\">Submit</button>\r\n      {error && <div classname=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PropertyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}