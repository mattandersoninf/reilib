/* NewProperty.js */

const NewProperty = props => {
    let enteredText = '';

    const addPropertyHandler = event => {
        event.preventDefault();

        const newProperty = {
            /*
                id (autogenerated)
                    StreetNumber: {
                        type: String,
                        require:true
                    },
                    StreetName: {
                        type: String,
                        require:true
                    },
                    City: {
                        type: String,
                        require: true
                    },
                    StateOrProvince: {
                        type: String,
                        require:true
                    },
                    PostalCode: {
                        type: String,
                        require:true
                    },
                    ListPrice: {
                        type: Number,
                        require:true
                    },
                    // sq footage, livable space
                    LivingArea: {
                        type: Number,
                        require:true
                    },
                    BedroomsTotal: {
                        type: Number,
                        require:true
                    },
                    BathroomsTotalDecimal: {
                        type: Number,
                        require: true
                    },
                    user_id:{
                        type: String,
                        required: true
                    },
                    Analyses: [
                        {
                            type: Schema.Types.ObjectId,
                            ref: 'Analysis'
                        }
                    ]
        
                */
            };

        props.onAddProperty(newProperty)

    }

    const textChangeHandler = event => {
        enteredText = event.target.value;
    }

    return (
        <form className="create" onSubmit={handleSubmit}>
            <h3>Add a New Property</h3>

            <label>Street Address:</label>
            <input
                type="text"
                onChange={(e) => setStreetAddress(e.target.value)}
                value={StreetAddress}
                className={emptyFields.includes('StreetAddress') ? 'error' : ''}
            />

            <label>City:</label>
            <input
                type="text"
                onChange={(e) => setCity(e.target.value)}
                value={City}
                className={emptyFields.includes('City') ? 'error' : ''}
            />

            <label>State:</label>
            <input
                type="text"
                onChange={(e) => setStateOrProvince(e.target.value)}
                value={StateOrProvince}
                className={emptyFields.includes('StateOrProvince') ? 'error' : ''}
            />

            <label>Zip Code:</label>
            <input
                type="text"
                onChange={(e) => setPostalCode(e.target.value)}
                value={PostalCode}
                className={emptyFields.includes('PostalCode') ? 'error' : ''}
            />

            <label>List Price:</label>
            <input
                type="number"
                onChange={(e) => setListPrice(e.target.value)}
                value={ListPrice}
                className={emptyFields.includes('ListPrice') ? 'error' : ''}
            />

            <label>Living Area (sq ft):</label>
            <input
                type="text"
                onChange={(e) => setLivingArea(e.target.value)}
                value={LivingArea}
                className={emptyFields.includes('LivingArea') ? 'error' : ''}
            />

            <label>Total Bedrooms:</label>
            <input
                type="text"
                onChange={(e) => setBedroomsTotal(e.target.value)}
                value={BedroomsTotal}
                className={emptyFields.includes('BedroomsTotal') ? 'error' : ''}
            />

            <label>Total Bathrooms:</label>
            <input
                type="text"
                onChange={(e) => setBathroomsTotalDecimal(e.target.value)}
                value={BathroomsTotalDecimal}
                className={emptyFields.includes('BathroomsTotalDecimal') ? 'error' : ''}
            />

            <button type="submit">Submit</button>
            {error && <div className="error">{error}</div>}
            </form>
    )

    
}

export default NewProperty;